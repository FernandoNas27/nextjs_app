name: CI/CD

on:
  push:
    branches:
      - main 

jobs:
  docker-build:
   name: Build and Test Docker Image for Selected Branch
   runs-on: ubuntu-latest
   # Ensure this job runs only after docker-compose finishes successfully
 #  needs: docker-compose  
   steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Log in to Docker Hub 
       uses: docker/login-action@v2
       with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
     - name: Pull MySQL Docker image
       run: |
          docker pull mysql:latest

     - name: Run MySQL container
       run: |
          docker run --name mysql-container -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=testdb -d -p 3306:3306 mysql:latest

     - name: Wait for MySQL to be ready
       run: |
          until docker exec mysql-container mysqladmin --user=root --password=password --host=127.0.0.1 --port=3306 ping --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done
          echo "MySQL is ready!"
          
     - name: Set up environment variable for DB connection
       run: echo "DB_CONNECTION_STRING=mysql+pymysql://root:password@172.18.0.2:3306/testdb" >> $GITHUB_ENV

     - name: Set branch name
       id: set-branch
       run: echo "BRANCH_NAME=${{ github.ref }}" | sed 's|refs/heads/||' >> $GITHUB_ENV
       
     - name: Build Docker image
       run: |
        docker build -t fastapi-clean:${{ env.BRANCH_NAME }} .

     - name: Verify Docker images
       run: |
        docker images

     - name: Push Docker image to Docker Hub
       run: |
         docker tag fastapi-clean:${{ env.BRANCH_NAME }} ${{ secrets.DOCKER_USERNAME }}/fastapi-clean:${{ env.BRANCH_NAME }}
         docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-clean:${{ env.BRANCH_NAME }}

     - name: Run Docker container
       run: |
         docker run --rm -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi-clean:${{ env.BRANCH_NAME }}

     - name: Verify container is running
       run: | 
        CONTAINER_ID=$(docker ps -q -f "ancestor=${{ secrets.DOCKER_USERNAME }}/fastapi-clean:${{ env.BRANCH_NAME }}") 
        docker logs --tail 100 -f $CONTAINER_ID & sleep 30; kill $!
