name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  docker-build:
   name: Build and Test Docker Image for Selected Branch
   runs-on: ubuntu-latest
   
   steps:
     # Checkout the repository 
     - name: Checkout code
       uses: actions/checkout@v3

     # Log in to Docker Hub
     - name: Log in to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}

     # Set up environment variable for DB connection
     - name: Set up environment variable for DB connection
       run: echo "DB_CONNECTION_STRING=mysql://root:password@172.18.0.2:3306/testdb" >> $GITHUB_ENV

     # Set branch name
     - name: Set branch name
       id: set-branch
       run: echo "BRANCH_NAME=${{ github.ref }}" | sed 's|refs/heads/||' >> $GITHUB_ENV

     # Install Node.js and dependencies
     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
         node-version: '18'
         cache: 'npm'

     - name: Install dependencies
       run: npm install

     # Build the Next.js app
     - name: Build Next.js app
       run: npm run build

     # Build Docker image
     - name: Build Docker image
       run: |
         docker build -t nextjs_app:${{ env.BRANCH_NAME }} .

     # Verify Docker images
     - name: Verify Docker images
       run: docker images

      # Force re-login to Docker Hub (if necessary)
     - name: Force re-login to Docker Hub
       run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

     # Push Docker image to Docker Hub
     - name: Push Docker image to Docker Hub
       run: |
         docker tag nextjs_app:${{ env.BRANCH_NAME }} ${{ secrets.DOCKER_USERNAME }}/nextjs_app:${{ env.BRANCH_NAME }}
         docker push ${{ secrets.DOCKER_USERNAME }}/nextjs_app:${{ env.BRANCH_NAME }}

     # Deploy to a remote server
     - name: Deploy to Remote Server
       run: |
         ssh -i ~/.ssh/id_rsa user@172.27.224.1 <<EOF
         docker pull ${{ secrets.DOCKER_USERNAME }}/nextjs_app:${{ env.BRANCH_NAME }}
         docker run -d -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/nextjs_app:${{ env.BRANCH_NAME }}
         EOF

     # Verify container is running
     - name: Verify container is running
       run: |
         CONTAINER_ID=$(docker ps -q -f "ancestor=${{ secrets.DOCKER_USERNAME }}/nextjs_app:${{ env.BRANCH_NAME }}")
         docker logs --tail 100 -f $CONTAINER_ID & sleep 30; kill $!
